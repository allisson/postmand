// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/deliveries": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "List deliveries",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The limit indicates the maximum number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The offset indicates the starting position of the query in relation to the complete set of unpaginated items",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by webhook_id field",
                        "name": "webhook_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status field",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than this value",
                        "name": "created_at.gt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than or equal to this value",
                        "name": "created_at.gte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than this value",
                        "name": "created_at.lt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than or equal to this value",
                        "name": "created_at.lte",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeliveryList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Add an delivery",
                "parameters": [
                    {
                        "description": "Add delivery",
                        "name": "delivery",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Delivery"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Delivery"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/deliveries/{delivery_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Show a delivery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery ID",
                        "name": "delivery_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Delivery"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "deliveries"
                ],
                "summary": "Delete an delivery",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery ID",
                        "name": "delivery_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/delivery-attempts": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "delivery-attempts"
                ],
                "summary": "List delivery attempts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The limit indicates the maximum number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The offset indicates the starting position of the query in relation to the complete set of unpaginated items",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by webhook_id",
                        "name": "webhook_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by delivery_id",
                        "name": "delivery_id",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by success",
                        "name": "success",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than this value",
                        "name": "created_at.gt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than or equal to this value",
                        "name": "created_at.gte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than this value",
                        "name": "created_at.lt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than or equal to this value",
                        "name": "created_at.lte",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeliveryAttemptList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/delivery-attempts/{delivery_attempt_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "delivery-attempts"
                ],
                "summary": "Show a delivery attempt",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery Attempt ID",
                        "name": "delivery_attempt_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeliveryAttempt"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/webhooks": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "List webhooks",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The limit indicates the maximum number of items to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "The offset indicates the starting position of the query in relation to the complete set of unpaginated items",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by active field",
                        "name": "active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than this value",
                        "name": "created_at.gt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is greater than or equal to this value",
                        "name": "created_at.gte",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than this value",
                        "name": "created_at.lt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Return results where the created_at field is less than or equal to this value",
                        "name": "created_at.lte",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/WebhookList"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Add an webhook",
                "parameters": [
                    {
                        "description": "Add webhook",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/webhooks/{webhook_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Show a webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Update an webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update webhook",
                        "name": "webhook",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Webhook"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "webhooks"
                ],
                "summary": "Delete an webhook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Webhook ID",
                        "name": "webhook_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Delivery": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delivery_attempts": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "scheduled_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "webhook_id": {
                    "type": "string"
                }
            }
        },
        "DeliveryAttempt": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "delivery_id": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "execution_duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "raw_request": {
                    "type": "string"
                },
                "raw_response": {
                    "type": "string"
                },
                "response_status_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "webhook_id": {
                    "type": "string"
                }
            }
        },
        "DeliveryAttemptList": {
            "type": "object",
            "properties": {
                "delivery_attempts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeliveryAttempt"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "DeliveryList": {
            "type": "object",
            "properties": {
                "deliveries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Delivery"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Webhook": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "content_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "delivery_attempt_timeout": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_delivery_attempts": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "retry_max_backoff": {
                    "type": "integer"
                },
                "retry_min_backoff": {
                    "type": "integer"
                },
                "secret_token": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "valid_status_codes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "WebhookList": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "offset": {
                    "type": "integer"
                },
                "webhooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Webhook"
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Postmand API",
	Description: "Simple webhook delivery system powered by Golang and PostgreSQL.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
